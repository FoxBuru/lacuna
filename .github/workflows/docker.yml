name: "Build Docker Container"

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main

env:
  GITHUB_REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    concurrency:
      group: lime-${{ github.head_ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set vars
        id: vars
        run: |
          IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/lacuna"
          echo "github_image_name=${IMAGE_NAME,,}" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=edge,branch=main
          images: |
            ${{ steps.vars.outputs.github_image_name }}:latest

      - name: Build and push client
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ (github.event_name == 'push' && github.ref_name == 'main') || github.event_name == 'pull_request' }}
          provenance: false
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ steps.vars.outputs.github_image_name }}:buildcache
          cache-to: type=registry,ref=${{ steps.vars.outputs.github_image_name }}:buildcache,mode=max
          build-args: |
            VERSION=${{ github.ref_name }}
